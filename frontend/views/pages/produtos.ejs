<h1><%= title %></h1>

<form id="produtoForm" class="row">
  <input required type="hidden" name="id" id="id">

  <div class="input-field col s12 m6">
    <i class="material-icons prefix">label</i>
    <input required name="nome" id="nome" type="text">
    <label for="nome">Nome</label>
  </div>

  <div class="input-field col s12 m6">
    <i class="material-icons prefix">description</i>
    <input required name="descricao" id="descricao" type="text">
    <label for="descricao">Descrição</label>
  </div>

  <div class="input-field col s12 m6">
    <i class="material-icons prefix">category</i>
    <input required name="categoria" id="categoria" type="text">
    <label for="categoria">Categoria</label>
  </div>

  <div class="input-field col s12 m6">
    <i class="material-icons prefix">attach_money</i>
    <input required name="preco" id="preco" type="text">
    <label for="preco">Preço</label>
  </div>

  <div class="input-field col s12 m6">
    <i class="material-icons prefix">straighten</i>
    <input required name="tamanho" id="tamanho" type="text">
    <label for="tamanho">Tamanho</label>
  </div>

  <div class="col s12">
    <button type="submit" class="btn waves-effect waves-light green">
      <i class="material-icons left">send</i>Enviar
    </button>
    <button type="reset" class="btn red lighten-1">
      <i class="material-icons left">cancel</i>Cancelar
    </button>
  </div>
</form>

<span id="error" class="red-text"></span>

<% if (error) { %>
  <span class="red-text"><%= JSON.stringify(error) %></span>
<% } %>

<table class="highlight responsive-table">
  <thead>
    <tr>
      <% for(let col of cols) { %>
        <th><%= col %></th>
      <% } %>
      
    </tr>
  </thead>
  <tbody>
    <% for(let produto of produtos) { %>
      <tr>
        <% for(let prop in produto) { %>
          <td><%= produto[prop] %></td>
        <% } %>
        <td>
          <button onclick="editProduto('<%= produto.id %>')" class="btn-small blue">
            <i class="material-icons">edit</i>
          </button>
          <button onclick="deleteProduto('<%= produto.id %>')" class="btn-small red">
            <i class="material-icons">delete</i>
          </button>
        </td>
      </tr>
    <% } %>
  </tbody>
</table>

<div style="padding-bottom: 2rem;"></div>

<script>
  const form = document.getElementById('produtoForm');
  form.addEventListener("submit", (e) => {
    e.preventDefault();
    const produto = mountDataForm();

    let id = produto.id;
    let METHOD = id ? 'PUT' : 'POST';
    let URL = id ? `/produtos/${id}` : '/produtos';

    createOrUpdate(produto, URL, METHOD);
  });

  function createOrUpdate(produto, URL, METHOD) {
    fetch(URL, {
      method: METHOD,
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(produto)
    })
    .then(async(res) => await checkError(res))
    .then(() => { 
      form.reset();
      window.location.reload();
    })
    .catch((error) => { 
      document.getElementById('error').innerText = error.message || JSON.stringify(error);
    });
  }

  function editProduto(id) {
    fetch("/produtos/" + id)
      .then(async (res) => await checkError(res))
      .then(produto => {
        for (let prop in produto) {
          const input = document.querySelector(`input[name="${prop}"]`);
          if (input) input.value = produto[prop];
        }
      })
      .catch(error => { document.getElementById('error').innerText = error });
  }

  function deleteProduto(id) {
    fetch("/produtos/" + id, { method: "DELETE" })
      .then(async (res) => await checkError(res))
      .then(() => window.location.reload())
      .catch((error) => { document.getElementById('error').innerText = error });
  }

  async function checkError(res) {
    if (!res.ok) {
      const err = await res.json();
      throw err;
    }
    return res.json();
  }

  function mountDataForm() {
    const formData = new FormData(form);
    const produto = {};
    formData.forEach((v, k) => {
      produto[k] = v;
    });
    return produto;
  }
</script>
